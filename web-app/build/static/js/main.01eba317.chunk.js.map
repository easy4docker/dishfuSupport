{"version":3,"sources":["modules/common/IpfsDoc.js","modules/common/Messagebox.js","stores/SettingStore.js","modules/common/RoleSection.js","modules/common/Loading.js","modules/common/Engine.js","modules/common/FingerPrinter.js","modules/common/AddressInput.js","modules/common/InfoHeader.js","modules/common/Logo.js","modules/mobileAuth/signInForm.js","modules/Header.js","modules/Footer.js","modules/content/Home.js","modules/authUsersAdmin/usersList.js","modules/authUsersAdmin/applicationsList.js","modules/transReport/trsnsSocketSync.js","modules/transReport/transDocument.js","modules/Body.js","App.js","reportWebVitals.js","index.js"],"names":["IpfsDoc","Mssagebox","message","title","className","Container","style","textTransform","console","log","window","location","hostname","_defaultSetting","ready","loading","screenModel","_watcher","fp","data","token","config","apiServer","webServer","sockerServer","ipfsServer","SettingStore","createStore","state","action","type","saveSettingApi","id","Date","getTime","composeWithDevTools","setTimeout","localStorage","setItem","JSON","stringify","callback","a","fpPromise","FingerprintJS","load","get","fpRecord","storageName","v","visitorId","getItem","parse","e","loadSettingApi","dispatch","RoleSection","roles","exroles","comp","showException","useState","myRoles","setMyRoles","Exroles","isection","filter","x","includes","exsection","loadMyRoles","getState","authInfo","useEffect","handleSubscribe","subscribe","compException","Messagebox","length","Loading","sts","setSts","Object","keys","Spinner","animation","size","Engine","prop","loadingOn","loadingOff","fetchApi","cfg","me","fetch","url","then","json","jsonData","err","status","catch","error","setToken","DatabaseApi","apiCode","dt","server","method","body","headers","this","defaultData","recipes","plates","orders","menus","focuses","FingerPrinter","result","AddressInput","props","defaultValue","inputAddress","setInputAddress","validAddress","setValidAddress","isValid","setIsValid","focused","setFocused","capitalize","str","charAt","toUpperCase","slice","upcase","formatedAddress","o","street_address1","city","postal_code","country","replace","verifyAddress","parser","passAddress","Form","Group","Control","required","placeholder","as","rows","onChange","target","value","onFocus","onBlur","Text","Row","Col","sx","InfoHeader","fluid","Navbar","expand","Brand","href","Logo","color","fontSize","SignInForm","SOCKET_URL","engine","phone","setPhone","validPhone","setValidPhone","qr","setQr","sockedId","setSockedId","patt","createSocket","socket","socketClient","connect","on","fromSocket","createQR","QRCode","toDataURL","width","quality","dark","light","t","disconnect","phoneForm","Label","test","Button","disabled","onClick","icon","faMobileAlt","QRSection","Alert","variant","Heading","Image","src","Header","expanded","setExpanded","navItem","authUsers","caption","role","linkTo","transTracking","SelectedClass","useLocation","pathname","getNavLink","item","itemRole","itemExRole","exrole","Nav","Link","to","Collapse","Footer","Year","getFullYear","Home","UsersList","address","setAddress","description","setDescription","success","setSuccess","submitApplication","onDescriptionChanged","onPhoneChanged","faSearch","ApplicationsList","qualification","setQualification","onQualificationChanged","faCloudUploadAlt","TransSocketSync","setUrl","linkUrl","TransDocument","Body","exact","path","App","loadReady","setloadReady","isDesktopOrLaptop","useMediaQuery","query","isBigScreen","isTabletOrMobile","isPortrait","isRetina","pageLoading","pageReady","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","document","_cacheExist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.01eba317.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\nimport {  IPFSEngine } from '../common';\n\nfunction IpfsDoc(props) {\n  const [doc, setDoc] = useState(null);\n  const ipfsEngine = new IPFSEngine();\n  // const [tm, setTm] = useState(0);\n  const tpl = props.tpl;\n  useEffect(()=> {\n    (async ()=> {\n      const x = await ipfsEngine.promiseIpfsJSON(props.ipfs)\n      // const x = await loadIpfs();\n      setDoc(x);\n      // setTm(new Date().getTime());\n    })();\n  }, []);\n  return (!doc)? props.ipfs : tpl({record:doc, className: props.className, style:props.style})\n}\nexport default IpfsDoc;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nconst Mssagebox = ({ message, title, className }) => {\n  return (<Container className={className + ' rounded p-3 message-box grid-bg'}>\n      <b style={{textTransform: 'capitalize'}}>{title}</b>\n      <h3 className=\"text-secondary m-3 p-3\">{message}</h3>\n    </Container>);\n};\nexport default Mssagebox;\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport  FingerprintJS  from '@fingerprintjs/fingerprintjs'\n\nconsole.log('window.location.hostname-->', window.location.hostname);\nconst _defaultSetting = {ready: false, loading: {}, screenModel:{}, _watcher:'',\n      fp : '',\n      data : {token:''},\n      config: {\n        apiServer     : 'http://192.168.86.126:3001',\n        webServer     : 'http://192.168.86.126:3000',\n        sockerServer  : 'http://192.168.86.126:3001/dishFu',\n        ipfsServer    :  \"//gateway.ipfs.io/ipfs/\"\n      }\n  };\n\nconst reducer = (state = _defaultSetting, action) => {\n  state._watcher = '';\n  switch(action.type) {\n    case 'updateToken':\n      state.data.token = action.token;\n      state._watcher = 'auth';\n      saveSettingApi(state.data);\n      console.log('===state.data===>', state.data);\n      return state;\n\n\n    /* --- None api action  --> */\n    case 'loadScreenModel':\n      state.screenModel = action.screenModel;\n      return state;\n\n    case 'addLoading':\n      state._watcher = 'loading';\n      state.loading[action.id] = new Date().getTime();\n      return state;\n    case 'removeLoading':\n      state._watcher = 'loading';\n      delete state.loading[action.id];\n      return state;\n\n    case 'initStore':\n      state.data = action.data;\n      state._watcher = 'afterInit';\n      return state;\n\n    default:\n      return state;\n  }\n};\nconst SettingStore = createStore(reducer, composeWithDevTools());\n\n/* --- simulated api ----> */\n\nconst loadSettingApi = async (callback) =>{\n  const fpPromise = FingerprintJS.load();\n  const fp = await fpPromise\n  const fpRecord = await fp.get()\n  setTimeout(\n    ()=>{\n      const storageName = 'localSettingData';\n      let v = _defaultSetting.data;\n      try {\n        v.visitorId = fpRecord.visitorId;\n        v = (!localStorage.getItem(storageName)) ? _defaultSetting.data : JSON.parse(localStorage.getItem(storageName))\n      } catch(e) {}\n      if (typeof callback === 'function') {\n        callback(v);\n      }\n    }, 200\n  );\n}\nconst saveSettingApi = (data) =>{\n  setTimeout(\n    ()=>{\n      localStorage.setItem('localSettingData',  JSON.stringify(data));\n    }, 500\n  );\n}\n\n/* <--- simulated api */\n\n\nloadSettingApi((data)=>{\n  SettingStore.dispatch({\n    type: 'initStore',\n    data : data\n  });\n});\n\n\n\nexport default SettingStore;\n","import React, {useState, useEffect} from 'react';\nimport { SettingStore } from \"../../stores\";\nimport { Messagebox } from \"../common\";\n\nfunction RoleSection({roles, exroles, comp, showException}) {\n  const [myRoles, setMyRoles] = useState([]);\n  const Exroles = (!exroles) ? [] : exroles;\n  \n  const isection = roles.filter(x => [...myRoles, 'all'].includes(x));\n  const exsection  = Exroles.filter(x => [...myRoles].includes(x));\n  \n  const loadMyRoles = () => {\n    setMyRoles( (!SettingStore.getState().data.authInfo || !SettingStore.getState().data.authInfo.roles) ? \n      [] : SettingStore.getState().data.authInfo.roles\n    );\n  }\n  useEffect(()=> {\n    const handleSubscribe =  SettingStore.subscribe(() => {\n        if (SettingStore.getState()._watcher === 'role' || SettingStore.getState()._watcher === 'auth') {\n          loadMyRoles();\n        }\n    });\n    loadMyRoles();\n    return ()=> {\n      handleSubscribe();\n    }\n  }, []);\n\n  const compException = (<div className=\"p-3\"><Messagebox message=\"Missing required roles\" /></div>)\n  return  (!isection.length || !!exsection.length) ? ((!showException) ? '' : compException) : comp\n}\nexport default RoleSection;\n","import React, { useState, useEffect} from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { SettingStore } from '../../stores/';\n\nfunction Loading() {\n  const [ sts, setSts] = useState(0);\n\n  useEffect(()=>{\n    const handleSubscribe = SettingStore.subscribe(() => {\n      if (SettingStore.getState()._watcher === 'loading') {\n         setSts(Object.keys(SettingStore.getState().loading).length);\n      }\n    });\n    return ()=> {\n      handleSubscribe();\n    }\n\n  },[]);\n  \n  return (\n  <div className={(sts) ? 'loading' : 'no-loading'}>\n      <Spinner animation=\"border\" size=\"md\" className=\"loading-text\"/>\n  </div>\n  )\n}\nexport { Loading }\n","import { SettingStore } from '../../stores';\n\nclass Engine {\n    constructor(prop) {\n        this.id = new Date().getTime();\n        this.defaultData = {recipes:[], plates:[], orders:[], menus:[], focuses:[]};\n        this.server = SettingStore.getState().config.apiServer;\n    }\n    loadingOn = ()=> {\n        SettingStore.dispatch({type:'addLoading', id: this.id});\n    }\n    loadingOff = ()=> {\n        SettingStore.dispatch({type:'removeLoading', id: this.id});\n    }\n    fetchApi = async (cfg, callback)=>{\n        this.loadingOn();\n        const me = this;\n        fetch(cfg.url, {}).then((v)=> {\n            return v.json()\n        }).then((jsonData, err)=>{\n            if (jsonData.status === 200) {\n                me.loadingOff();\n                callback(jsonData.data);\n            } else {\n                me.loadingOff();\n            }\n        }).catch((error)=> {\n            me.loadingOff();\n          });;\n    }\n\n    setToken = (token)=>{\n        SettingStore.dispatch({\n            type: 'updateToken',\n            token: token\n        });\n    }\n\n\n     DatabaseApi = (apiCode, dt, callback)=>{\n        const me = this;\n        fetch(me.server + '/api/' + apiCode, {\n            method: 'POST',\n            body: JSON.stringify(dt),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(v=>v.json()).then((data)=> {\n            callback(data);\n        }).catch((err) => {\n            callback(err);\n        });\n     }\n\n}\n\nexport default Engine;","import { SettingStore, DataStore } from '../../stores';\n// -- https://github.com/fingerprintjs/fingerprintjs\nimport  FingerprintJS  from '@fingerprintjs/fingerprintjs'\n\nclass FingerPrinter {\n    constructor(prop) {\n        this.visitorId = null;\n    }\n    load = async () => {\n        // Get the visitor identifier when you need it.\n        const fpPromise = FingerprintJS.load();\n        const fp = await fpPromise\n        const result = await fp.get()\n        \n        // This is the visitor identifier:\n        this.visitorId = result.visitorId\n        return this.visitorId;\n        console.log('a->', this.visitorId)\n    }\n}\n\nexport default FingerPrinter;","import React , { useState, useEffect } from 'react';\nimport { Form, Row, Col } from 'react-bootstrap';\nimport parser from 'parse-address-string';\n\nfunction AddressInput(props) {\n  const [inputAddress, setInputAddress] = useState(props.defaultValue);\n  const [validAddress, setValidAddress] = useState({});\n  const [isValid, setIsValid] = useState(false);\n  const [focused, setFocused] = useState(false);\n\n  const onAddressChange = (e)=> {\n    e.target.value = e.target.value\n    verifyAddress(e.target.value);\n  }\n  const onAddressBlur = (e)=> {\n    setFocused(false);\n    if (isValid) {\n      e.target.value=formatedAddress(validAddress);\n    } else {\n      e.target.value = '';\n    }\n    setInputAddress(formatedAddress(validAddress));\n  }\n  const capitalize = (str) => {\n    return !str? '' : str.charAt(0).toUpperCase() + str.slice(1)\n  }\n  const upcase = (str) => {\n    return !str? '' : str.toUpperCase()\n  }\n\n  const formatedAddress = (o) =>{\n    return (capitalize(o.street_address1)  +  ',' + capitalize(o.city) +  ',' + upcase(o.state) + ' ' + upcase(o.postal_code) +\n    upcase((o.country === 'USA') ? '' : o.country)).replace(/\\s+/ig, \" \");\n  }\n  const verifyAddress = (inputAddress)=> {\n    parser(inputAddress, function(err,o){\n      o.country = (!o.country) ? 'USA' : o.country;\n      setValidAddress(o)\n      if (!!o.street_address1 && !!o.city && !!o.postal_code && !!o.state && !err) {\n        props.passAddress(formatedAddress(o));\n        setIsValid(true);\n      } else {\n        props.passAddress('');\n        setIsValid(false);\n      }\n    })\n    return true;\n}\n  useEffect(()=> {\n   }, []);\n   return   (<Form.Group>\n      <Form.Control defaultValue={inputAddress} required placeholder=\"Input Your address\" as=\"textarea\" \n        rows=\"1\"\n        onChange={onAddressChange} \n        onFocus={()=>{ setFocused(true)}}\n        onBlur={onAddressBlur}\n        />\n      {(focused) && (<Form.Text className=\"p-3 mt-1 alert-secondary\">\n        <Row>\n          <Col sx={6} className=\"p-0 pl-2\">\n            Street Address: <b>{validAddress.street_address1}</b><br/>\n            City: <b>{validAddress.city}</b><br/>\n            {(isValid) ? (<span className=\"text-success\">Correct Format.</span>) : (<span  className=\"text-info\">Parsing ...</span>)}\n          </Col>\n          <Col sx={6}  className=\"p-0 pl-2\">\n            State: <b>{validAddress.state}</b><br/>\n            Postal: <b>{validAddress.postal_code}</b><br/>\n            Country: <b>{validAddress.country}</b><br/>\n          </Col>\n        </Row>  \n      </Form.Text>)}\n    </Form.Group>);\n}\n\nexport { AddressInput }","import React from 'react';\nimport { Navbar, Container } from 'react-bootstrap';\nimport { Logo } from '../common';\nfunction InfoHeader(props) {\n  return (\n    <Container className=\"bg-info\" fluid={true}>\n      <Container>\n        <Navbar expand=\"lg\" className=\"p-1\">\n            <Navbar.Brand href=\"/\" ><Logo/></Navbar.Brand>\n            <Navbar.Brand className=\"menu-color\">\n              {props.comp}\n            </Navbar.Brand>\n        </Navbar>\n      </Container>\n    </Container>\n  )\n}\nexport { InfoHeader };\n","import React from 'react';\nfunction Logo() {\n  return (\n    <div className=\"border rounded p-1 m-0\" style={{color:'yellow', fontSize:'1.5rem'}}>\n    菜譜<span className=\"ml-1\" style={{fontSize:'1rem'}}>SupportCenter</span>\n    </div>\n  )\n}\nexport { Logo };\n","import React , { useState, useEffect } from 'react';\nimport { Container, Form, Button, Alert, Image} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMobileAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Engine } from '../common';\nimport { SettingStore } from '../../stores';\nimport QRCode from 'qrcode'\nimport socketClient  from 'socket.io-client';\n\nfunction SignInForm (props) {\n   const SOCKET_URL = SettingStore.getState().config.sockerServer;\n   const engine = new Engine();\n   const [phone, setPhone] = useState('');\n   const [validPhone, setValidPhone] = useState(false);\n   const [qr, setQr] =  useState('');\n   const [sockedId, setSockedId] =  useState('');\n\n   const patt = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n\n   const [token, setToken] = useState(SettingStore.getState().data.token);\n   \n   let socket = null;\n   const onPhoneChanged = (e)=>{\n      if (patt.test(e.target.value)) {\n        e.target.value = e.target.value.replace(patt, '($1)$2-$3');\n        setPhone(e.target.value.replace(patt, '($1)$2-$3'));\n      } else {\n        setPhone('');\n      }\n    }\n   const isSubmit = ()=>{\n      return (!phone) ? false : true;\n   }\n   const submitPhone = ()=> {\n      engine.loadingOn();\n      engine.DatabaseApi('admin', {\n        action: 'checkPhone',\n        data: {\n          visitorId: SettingStore.getState().fp, \n          phone : phone.replace(patt, '$1$2$3')\n        }\n      }, (result)=>{\n        engine.loadingOff();\n        setValidPhone(true);\n      });\n   }\n   let currentSocket = {};\n   const createSocket = (callback) => {\n      const socket = socketClient.connect(SOCKET_URL);\n      socket.on('connect', () => {\n         socket.on('afterTransfer', (fromSocket, body) =>{\n              // console.log('afterTransfer, from->',fromSocket);\n              // console.log('afterTransfer,  body->', body);\n             // saveAuthInfo(body);\n             // socket.disconnect();\n          });\n          const token = socket.id.replace('/dishFu#', '');\n          setSockedId(token);\n          createQR(token);\n          setValidPhone(false);\n          if (callback) callback(token)\n      });\n      socket.on('disconnect', () => {\n          setSockedId('');\n          createQR('');\n          setValidPhone(false);\n      });\n      return socket\n   }\n   const cleanToken = ()=> {\n      engine.setToken('');\n   }\n\n   const createQR = (sockedId) => {\n      QRCode.toDataURL(SOCKET_URL + '/AdminAuth/' + sockedId,\n          { \n              width:338,\n              type: 'image/png',\n              quality: 1.0,\n              color: {\n                  dark: '#000000',  \n                  light: '#0000'\n              }\n          }, (err, str)=>{\n              setQr(str)\n          });\n   }\n   useEffect(()=> {\n      const t = !SettingStore.getState().data ? '' : SettingStore.getState().data.token;\n      setToken(t);\n      const socket = (t) ? createSocket() : (!validPhone) ? null : createSocket((token)=> {\n         engine.setToken(token);\n      });\n      const handleSubscribe = SettingStore.subscribe(() => {\n         if (SettingStore.getState()._watcher === 'auth') {\n            const t = !SettingStore.getState().data ? '' : SettingStore.getState().data.token;\n            setToken(t);\n            if (!t && !!socket) {\n               socket.disconnect();\n            }\n         }\n         return false;\n      }); \n     return ()=> {\n         handleSubscribe();\n     }\n    }, [validPhone])\n\n   const phoneForm = (<span>\n      <Form.Group>\n       <Form.Label>Signin with your smart phone</Form.Label>\n       <Form.Control defaultValue=\"\" placeholder=\"(xxx)xxx-xxxx\" type=\"text\" style={{fontSize:'2rem'}}\n         onChange={onPhoneChanged} />\n     </Form.Group>\n     <Form.Group>\n         <Form.Label>\n         <Button className=\"btn btn-warning m-0 mr-3\" disabled={!isSubmit()}  onClick={submitPhone}>\n            <FontAwesomeIcon size=\"1x\" icon={faMobileAlt} className=\"m-0\" /> Submit\n         </Button>\n         </Form.Label>\n      </Form.Group></span>);\n\n   const QRSection = (<Alert variant=\"secondary\">\n      <Alert.Heading className=\"p-3\">Request submitted! What's the next step?</Alert.Heading>\n      <ol>\n         <li>The phone {phone} will receive a text message with an authentication link.</li>\n         <li>Click confirmed the link of the txt mesage.</li>\n         <li>Last step, to use the phone scan this QR code. The computer client with grant an admin permission.</li>\n         </ol>\n         <Container fluid={true}>\n            {SettingStore.getState().config.webServer + '/AdminAuth/' + sockedId}\n            <br/>\n            <Image src={qr} className=\"border border-primary\"/>\n         </Container>\n         <Container fluid={true} className=\"p-3\">\n            <h3>OR </h3>\n         </Container>\n         <Button className=\"btn btn-warning m-1 mr-3\" onClick={cleanToken}>\n            <FontAwesomeIcon size=\"1x\" icon={faMobileAlt} className=\"mr-2\" />Reset\n         </Button>\n      </Alert>)\n\n   return (<Container fluid={true} className=\"p-3 content-body\">\n      \n      <Form className=\"p-3\">\n         {(!token) && phoneForm}\n         {(token) && QRSection}\n      </Form>\n      {sockedId}=={token}\n   </Container>)\n}\nexport { SignInForm }","\nimport React, {useEffect, useState} from 'react';\nimport { Nav, /* NavDropdown, */ Navbar, Container, Badge } from 'react-bootstrap';\nimport { Link, useLocation  } from \"react-router-dom\";\nimport { RoleSection } from './common';\nimport { AuthHeadItem  }  from './mobileAuth';\nimport { Logo } from './common';\n\nfunction Header(props) {\nconst [expanded, setExpanded] = useState(\"\")\n\n  const navItem = {\n    authUsers:  {caption: 'User Admin', role: ['all'], linkTo: '/authUsers'},\n    transTracking:  {caption: 'Transaction Report', role: ['all'], linkTo: '/transReport'}\n  };\n  const SelectedClass = (v)=> {\n    const location = useLocation(); \n    return (location.pathname !== navItem[v].linkTo) ? 'menu-color' : 'menu-color-select';\n  }\n  const getNavLink = (v)=> {\n    const item = !navItem[v] ? {role: []} : navItem[v],\n          itemRole = (!item || !item.role) ? [] : item.role,\n          itemExRole = (!item || !item.exrole) ? [] : item.exrole;\n    const comp = ((item)=>(<Nav.Link as={Link} to={item.linkTo} className={SelectedClass(v)}\n        onClick={()=> {  setExpanded(false); }}>{item.caption}</Nav.Link>))(item);\n\n    return (<RoleSection roles={itemRole} comp={comp} exroles={itemExRole}  />);\n  }\n  useEffect(() => {\n  }, []);\n\n  return (\n    <Container className=\"bg-info\" fluid={true}>\n      <Container>\n        <Navbar expand=\"lg\" className=\"p-1\" expanded={expanded}>\n            <Navbar.Brand as={Link} to=\"/\" className=\"menu_color\"><Logo/></Navbar.Brand>\n            <Navbar.Brand as={Link} to=\"/auth\" className=\"menu-color\">\n            </Navbar.Brand>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"me-auto\">\n                {getNavLink('authUsers')}\n                {getNavLink('transTracking')}\n              </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n      </Container>\n    </Container>\n  );\n}\n\nexport default Header;\n","import { Container } from 'react-bootstrap';\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction Footer() {\n  const Year = new Date().getFullYear();\n  return (\n    <Container fluid={true} className=\"footer\">\n        <div className=\"float-left alert-secondary footer-tag\">\n          &copy; {Year} Dishfu &nbsp;\n          &nbsp;<Link to=\"/privacy\">Privacy</Link>\n          &nbsp;|&nbsp;<Link to=\"/terms\">Term</Link>\n        </div>\n        <div className=\"clearfix p-0 m-0\"></div>\n    </Container>\n    \n  );\n}\nexport default Footer;\n","import React , { useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Engine } from '../common';\n\nfunction Home(props) {\n  const engine = new Engine();\n  useEffect(() => {\n\n  }, []);\n  return (\n    <Container fluid={true} className=\"p-0 m-0 content-body\">\n      <Container fluid={true} className=\"p-0 m-0 content-body\">\n        <Container className=\"alert-light text-secondary p-3\">\n            Nothing to address\n        </Container>\n      </Container>\n    </Container>\n  );\n}\nexport default Home;\n","import React , { useState, useEffect } from 'react';\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport { AddressInput, Engine } from '../common';\nimport { SettingStore } from '../../stores';\n\nfunction UsersList(props) {\n  const engine = new Engine();\n  const [address, setAddress] = useState('');\n  const [description, setDescription] = useState('');\n  const [phone, setPhone] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  const submitApplication = ()=> {\n    engine.loadingOn();\n    engine.DatabaseApi('application', {\n      action: 'save',\n      data: {\n        type:'foodie', \n        visitorId: SettingStore.getState().fp, \n        address:address,\n        phone : phone,\n        description: description\n      }\n    }, ()=>{\n      engine.loadingOff();\n      setSuccess(true);\n    });\n  }\n  const onDescriptionChanged = (e)=> {\n    setDescription(e.target.value);\n  }\n  const onPhoneChanged = (e)=> {\n    const patt = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    if (patt.test(e.target.value)) {\n      e.target.value = e.target.value.replace(patt, '($1)$2-$3');\n      setPhone(e.target.value.replace(patt, '($1)$2-$3'));\n    } else {\n      setPhone('');\n    }\n  }\n  const isSubmit = () => {\n    return (!address) ? false : true;\n  }\n\n  useEffect(()=> {}, []);\n\n  const successForm = () =>  (\n    <Container>\n      <Alert variant=\"success mt-3\">\n        <Alert.Heading>You application submitted!</Alert.Heading>\n          <span>\n            You might become a foodie automatically upon our AI valification. or you will be contacted sooner. \n          </span>\n        </Alert>\n    </Container>);\n\n  const inputForm = () => (\n   <Container className=\"mb-3 pb-3\">\n      <Alert variant=\"secondary mt-3\">\n        <Alert.Heading>If you have the Foodie role:</Alert.Heading>\n        <ul>\n          <li>You can be a housewife who wants to share her cooking hobby with neighbours, \n            while making a side income. Foodie can be a restaurant owner, to extend their business objectives. </li>\n          <li>You needs to provide a real address (not PO box), can create receipts, and contact supplies. </li>\n          <li>You drives the following workflow: create receipt -> contact supplier and confirm the plate -> \n            publish the plate to “menu”</li>\n          <li>You authentication requires a barcode provided by DishFoo via mail. \n            Once the barcode is scanned, then Foodie can publish the plate to the menu.</li>\n        </ul>\n      </Alert>\n      <Form>\n      <Form.Group>\n          <Form.Label><b>Foodie Address:</b> <span className=\"form_notice_info\">* Required</span></Form.Label>\n          <AddressInput passAddress={setAddress} defaultValue={address}/>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label><b>Application Description:</b> <span className=\"form_notice_info\">(Option)</span> </Form.Label>\n          <Form.Control defaultValue={description} placeholder=\"Input Description\" as=\"textarea\" \n            rows=\"3\"\n            onChange={onDescriptionChanged } />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label><b>Contact Phone:</b> <span className=\"form_notice_info\">(Option)</span></Form.Label>\n          <Form.Control defaultValue={phone} placeholder=\"Input Contact Phone\" as=\"textarea\" \n            rows=\"1\"\n            onChange={onPhoneChanged} />\n        </Form.Group>\n        <Button className=\"btn btn-info m-0 mr-3\" disabled={!isSubmit()}  onClick={submitApplication}>\n          <FontAwesomeIcon size=\"1x\" icon={faSearch} className=\"m-0\" /> Submit\n        </Button>\n      </Form>\n   </Container>);\n   return (!success) ? inputForm() : successForm();\n}\n\nexport { UsersList }","import React , { useState, useEffect } from 'react';\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\nimport { AddressInput, Engine } from '../common';\nimport { SettingStore } from '../../stores';\n\nfunction ApplicationsList(props) {\n  const engine = new Engine();\n  const [address, setAddress] = useState('');\n  const [qualification, setQualification] = useState('');\n  const [description, setDescription] = useState('');\n  const [phone, setPhone] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  const submitApplication = ()=> {\n    engine.loadingOn();\n    engine.DatabaseApi('application', {\n      action: 'save',\n      data: {\n        type:'supie', \n        visitorId: SettingStore.getState().fp, \n        address:address, \n        phone : phone,\n        qualification: qualification,\n        description: description\n      }\n    }, ()=>{\n      engine.loadingOff();\n      setSuccess(true);\n    });\n  }\n  const onQualificationChanged = (e)=> {\n    setQualification(e.target.value);\n  }\n  const onDescriptionChanged = (e)=> {\n    setDescription(e.target.value);\n  }\n\n  const isSubmit = () => {\n    return (!phone || !address || !qualification) ? false : true;\n  }\n  const onPhoneChanged = (e)=> {\n    const patt = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    if (patt.test(e.target.value)) {\n      e.target.value = e.target.value.replace(patt, '($1)$2-$3');\n      setPhone(e.target.value.replace(patt, '($1)$2-$3'));\n    } else {\n      setPhone('');\n    }\n  }\n  useEffect(()=> {}, []);\n\n  const successForm = () =>  (\n    <Container>\n    <Alert variant=\"success mt-3\">\n      <Alert.Heading>You application submitted!</Alert.Heading>\n        <span>\n          You might become a supie automatically upon our AI valification. or you will be contacted sooner. \n        </span>\n      </Alert>\n    </Container>);\n/*\n  const errorBox = () => {\n    const title = (<span className=\"text-success\">You application submitted! </span>)\n    const message = (<span className=\"text-success\">\n    You might become a supie automatically upon our AI valification. or you will be contacted sooner. </span>)\n    return (<alert message={message} title={title} className=\"mt-3\"/>)\n  }\n*/\n  const inputForm = ()=> (\n   <Container className=\"mb-3 pb-3\">\n      <Alert variant=\"secondary mt-3\">\n        <Alert.Heading>If you have the Supie role</Alert.Heading>\n        <ul>\n          <li>You can be grocery stores, farms or restaurants.</li>\n          <li>You can make plate based on receipt and send back to Foodie for validation.</li>\n          <li> You needs to provide a real address (not PD box), can view the receipts from Foodie.</li>\n        </ul>\n      </Alert>\n\n      <Form>\n        <Form.Group>\n          <Form.Label><b>Supie Address:</b> <span className=\"form_notice_info\">* Required</span></Form.Label>\n          <AddressInput passAddress={setAddress} defaultValue={address}/>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label><b>Contact Phone:</b> <span className=\"form_notice_info\">* Required</span></Form.Label>\n          <Form.Control defaultValue={phone} placeholder=\"Input Contact Phone\" as=\"textarea\" \n            rows=\"1\"\n            onChange={onPhoneChanged} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label><b>Your Qualification:</b> <span className=\"form_notice_info\">* Required</span></Form.Label>\n          <Form.Control defaultValue={qualification} placeholder=\"Input Qualification\" as=\"textarea\" \n            rows=\"1\"\n            onChange={onQualificationChanged } />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label><b>Application Description:</b> <span className=\"form_notice_info\">(Option)</span> </Form.Label>\n          <Form.Control defaultValue={description} placeholder=\"Input Description\" as=\"textarea\" \n            rows=\"3\"\n            onChange={onDescriptionChanged } />\n        </Form.Group>\n        <Button className=\"btn btn-info m-0 mr-3\" disabled={!isSubmit()} onClick={submitApplication}>\n          <FontAwesomeIcon size=\"1x\" icon={faCloudUploadAlt} className=\"m-0\" /> Submit\n        </Button>\n      </Form>\n   </Container>);\n\n   return (!success) ? inputForm() : successForm()\n}\n\nexport { ApplicationsList }","import React , { useState, useEffect } from 'react';\nimport { Container, Image, Alert, Button } from 'react-bootstrap';\nimport { SettingStore } from '../../stores';\nimport QRCode from 'qrcode';\n\nfunction TransSocketSync (props) {\n  const [qr, setQr] = useState('');\n  const [sockedId, setSockedId] =  useState('');\n  const [url, setUrl] =  useState('');\n  \n  useEffect(()=> {\n    console.log('SettingStore==>>>>', SettingStore.getState().data);\n  }, [])\n  useEffect(()=> {\n    if (sockedId) {\n        const linkUrl = SettingStore.getState().config.webServer  + '/MobileAuth/' + sockedId;\n        setUrl(linkUrl);\n        QRCode.toDataURL(linkUrl,\n        { \n            width:338,\n            type: 'image/png',\n            quality: 1.0,\n            color: {\n                dark: '#000000',  \n                light: '#0000'\n            }\n        }, (err, str)=>{\n            setQr(str)\n        });\n    }\n}, [sockedId]);\n  return  (<Container className=\"content-body mt-3\">\n   Nothing\n  </Container>);\n}\nexport {TransSocketSync  }","import React , { useState, useEffect } from 'react';\nimport { Container, } from 'react-bootstrap';\nimport { SettingStore } from '../../stores';\nimport { TransSocketSync } from '../transReport';\n\nfunction TransDocument (props) {\n   return (<Container>\n      <TransSocketSync/>\n   </Container>)\n}\nexport { TransDocument }","import React , { useEffect } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport { Container } from 'react-bootstrap';\n\nimport { Home } from \"./content\";\nimport { ApplicationsList, UsersList } from \"./authUsersAdmin\";\nimport { TransDocument } from \"./transReport\";\nimport { SignInForm } from '../modules/mobileAuth';\n\nfunction Body(props) {\n  useEffect(() => {\n  }, []);\n\n  return (\n    <Container fluid={true} className=\"m-0 p-0\">\n        <SignInForm/> \n        <Switch>\n          <Route  exact path=\"/\">\n            <Home/>\n          </Route>\n          <Route  exact path=\"/authUsers\">\n            <ApplicationsList/>\n          </Route>\n          <Route  exact path=\"/authUsers/:uid\">\n            <UsersList/>\n          </Route>\n          <Route  exact path=\"/transReport\">\n            <TransDocument/>\n          </Route>\n        </Switch>\n    </Container>\n   \n  );\n}\n\nexport default Body;\n","import React , { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport  Header  from './modules/Header';\nimport  Footer  from './modules/Footer';\nimport  Body from './modules/Body';\nimport { Spinner } from 'react-bootstrap';\nimport './App.css';\nimport { useMediaQuery } from 'react-responsive';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { SettingStore } from './stores/';\nimport { Loading, FingerPrinter, InfoHeader } from './modules/common';\n\n\nconst App = (props) => {\n  const fp = new FingerPrinter();\n  const [loadReady, setloadReady] = useState(false);\n\n  const screenModel = {\n    isDesktopOrLaptop : useMediaQuery({ query: '(min-width: 1224px)'}),\n    isBigScreen : useMediaQuery({ query: '(min-width: 1824px)' }),\n    isTabletOrMobile : useMediaQuery({ query: '(max-width: 1224px)' }),\n    isPortrait : useMediaQuery({ query: '(orientation: portrait)' }),\n    isRetina : useMediaQuery({ query: '(min-resolution: 2dppx)' })\n  };\n\n  useEffect(() => {\n    const handleSubscribe = SettingStore.subscribe(() => {\n      if (SettingStore.getState()._watcher === 'afterInit') {\n        setloadReady(true);\n      }\n      return false;\n    }); \n\n    (async()=>{\n      console.log(await fp.load());\n    })();\n    \n    setTimeout(\n      ()=> {\n        console.log('==fp.visitorId==', fp.visitorId);\n        SettingStore.getState().fp = fp.visitorId;\n        console.log(SettingStore.getState().fp);\n      }, 1000\n    )\n    SettingStore.dispatch({ type: 'loadScreenModel',\n      screenModel: screenModel\n    });\n\n    return ()=> {\n      handleSubscribe();\n  }\n  }, []);\n  // localStorage.clear();\n  console.log('called localStorage.clear()');\n\n  const pageLoading = (<InfoHeader comp={(<Spinner animation=\"border\" size=\"md\" className=\"loading-text\"/>)} />);  \n\n  const pageReady = (\n      <Router className=\"p-0 m-0\">\n        <Switch>\n          <Route>\n            <Header/>\n            <Loading/>\n            <Body/>\n            <Footer/>\n          </Route>\n        </Switch>\n      </Router>)\n\n    return (!loadReady) ? pageLoading : pageReady;\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\ndocument._cacheExist = true;\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}